// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/MapView', 'views/ThemeNavView', 'views/YearNavView', 'views/MapToolsView', 'views/BreadcrumbView', 'views/CountyNetSupplyCollectionView', 'views/RegionStrategyCollectionView', 'views/CountyStrategyCollectionView', 'views/TypeStrategyCollectionView', 'views/EntityStrategyCollectionView', 'collections/StrategyTypeCollection', 'collections/CountyCollection'], function(MapView, ThemeNavView, YearNavView, MapToolsView, BreadcrumbView, CountyNetSupplyCollectionView, RegionStrategyCollectionView, CountyStrategyCollectionView, TypeStrategyCollectionView, EntityStrategyCollectionView, StrategyTypeCollection, CountyCollection) {
  var ISWPWorkspace;
  return ISWPWorkspace = (function(_super) {

    __extends(ISWPWorkspace, _super);

    function ISWPWorkspace() {
      return ISWPWorkspace.__super__.constructor.apply(this, arguments);
    }

    ISWPWorkspace.prototype.initialize = function(options) {
      _.bindAll(this, 'updateViewsToNewYear');
      this.currTableView = null;
      this.currYear = "2010";
      this.tableContainer = $('#tableContainer')[0];
      this.mapView = new MapView({
        mapContainerId: 'mapContainer',
        bingApiKey: $('#bing_maps_key').val()
      });
      this.mapView.render();
      this.mapToolsView = new MapToolsView({
        el: $('#mapTools')[0],
        mapView: this.mapView
      });
      this.mapToolsView.render();
      this.themeNavView = new ThemeNavView({
        el: $('#themeNavContainer')[0]
      });
      this.themeNavView.render();
      this.yearNavView = new YearNavView({
        startingYear: this.currYear,
        el: $('#yearNavContainer')[0]
      });
      this.yearNavView.render();
      this.yearNavView.currentYear.subscribe(this.updateViewsToNewYear);
      this.breadcrumbList = new BreadcrumbView({
        el: $('#breadcrumbContainer')[0]
      });
      this.breadcrumbList.render();
      this.strategyTypes = new StrategyTypeCollection();
      this.strategyTypes.reset(initStrategyTypes);
      this.countyNames = new CountyCollection();
      this.countyNames.reset(initCountyNames);
    };

    ISWPWorkspace.prototype.updateViewsToNewYear = function(newYear) {
      this.currYear = newYear;
      this.currTableView.changeToYear(newYear);
    };

    ISWPWorkspace.prototype.routes = {
      "": "wmsNetCountySupplies",
      "wms": "wmsNetCountySupplies",
      "wms/region/:regionLetter": "wmsRegion",
      "wms/county/:countyId": "wmsCounty",
      "wms/type/:typeId": "wmsType",
      "wms/entity/:entityId": "wmsEntity"
    };

    ISWPWorkspace.prototype.wmsNetCountySupplies = function() {
      if (this.currTableView != null) {
        this.currTableView = this.currTableView.unrender();
      }
      this.currTableView = new CountyNetSupplyCollectionView({
        el: this.tableContainer,
        currYear: this.currYear
      });
      this.currTableView.render();
    };

    ISWPWorkspace.prototype.wmsRegion = function(regionLetter) {
      if (this.currTableView != null) {
        this.currTableView = this.currTableView.unrender();
      }
      this.currTableView = new RegionStrategyCollectionView({
        el: this.tableContainer,
        currYear: this.currYear,
        id: regionLetter,
        name: regionLetter
      });
      this.currTableView.render();
    };

    ISWPWorkspace.prototype.wmsCounty = function(countyId) {
      var countyName;
      if (this.currTableView != null) {
        this.currTableView = this.currTableView.unrender();
      }
      countyName = this.countyNames.get(countyId).get('name');
      this.currTableView = new CountyStrategyCollectionView({
        el: this.tableContainer,
        currYear: this.currYear,
        id: countyId,
        name: countyName
      });
      this.currTableView.render();
    };

    ISWPWorkspace.prototype.wmsType = function(typeId) {
      var typeName;
      if (this.currTableView != null) {
        this.currTableView = this.currTableView.unrender();
      }
      typeName = this.strategyTypes.get(typeId).get('name');
      this.currTableView = new TypeStrategyCollectionView({
        el: this.tableContainer,
        currYear: this.currYear,
        id: typeId,
        name: typeName
      });
      this.currTableView.render();
    };

    ISWPWorkspace.prototype.wmsEntity = function(entityId) {
      if (this.currTableView != null) {
        this.currTableView = this.currTableView.unrender();
      }
      this.currTableView = new EntityStrategyCollectionView({
        el: this.tableContainer,
        currYear: this.currYear,
        id: entityId,
        name: entityId
      });
      this.currTableView.render();
    };

    return ISWPWorkspace;

  })(Backbone.Router);
});
