// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['namespace', 'views/MapView', 'views/ThemeNavToolbarView', 'views/YearNavView', 'views/MapBottomToolbarView', 'views/CountyNetSupplyCollectionView', 'views/RegionStrategyCollectionView', 'views/CountyStrategyCollectionView', 'views/LegeDistrictCollectionView', 'views/StrategyTypeCollectionView', 'views/EntityStrategyCollectionView', 'views/StrategyDetailCollectionView', 'views/WmsAreaSelectView', 'views/MapTopButtonsView', 'collections/StrategyTypeCollection', 'collections/CountyCollection', 'collections/RegionCollection', 'collections/HouseCollection', 'collections/SenateCollection'], function(namespace, MapView, ThemeNavToolbarView, YearNavView, MapBottomToolbarView, CountyNetSupplyCollectionView, RegionStrategyCollectionView, CountyStrategyCollectionView, LegeDistrictCollectionView, StrategyTypeCollectionView, EntityStrategyCollectionView, StrategyDetailCollectionView, WmsAreaSelectView, MapTopButtonsView, StrategyTypeCollection, CountyCollection, RegionCollection, HouseCollection, SenateCollection) {
  var WMSRouter;
  return WMSRouter = (function(_super) {

    __extends(WMSRouter, _super);

    function WMSRouter() {
      return WMSRouter.__super__.constructor.apply(this, arguments);
    }

    WMSRouter.prototype.initialize = function(options) {
      _.bindAll(this, 'updateViewsToNewYear', 'updateSelectedWug', 'onTableStartLoad', 'onTableEndLoad', 'onTableNothingFound', 'onTableFetchError');
      this.currTableView = null;
      this.tableContainer = $('#tableContainer')[0];
      this.mapView = new MapView({
        mapContainerId: 'mapContainer',
        bingApiKey: $('#bing_maps_key').val()
      });
      this.mapView.render();
      this.mapBottomToolbarView = new MapBottomToolbarView({
        el: $('#mapBottomToolsContainer')[0],
        mapView: this.mapView
      });
      this.mapBottomToolbarView.render();
      this.themeNavToolbarView = new ThemeNavToolbarView({
        el: $('#themeNavContainer')[0]
      });
      this.mapTopButtonsView = new MapTopButtonsView({
        el: $('#mapTopButtonsContainer')[0],
        mapView: this.mapView
      });
      this.mapTopButtonsView.render();
      this.yearNavView = new YearNavView({
        el: $('#yearNavContainer')[0]
      });
      this.yearNavView.on("changeyear", this.updateViewsToNewYear);
      namespace.strategyTypes = new StrategyTypeCollection();
      namespace.strategyTypes.reset(initStrategyTypes);
      namespace.countyNames = new CountyCollection();
      namespace.countyNames.reset(initCountyNames);
      namespace.regionNames = new RegionCollection();
      namespace.regionNames.reset(initRegionNames);
      namespace.houseNames = new HouseCollection();
      namespace.houseNames.reset(initHouseNames);
      namespace.senateNames = new SenateCollection();
      namespace.senateNames.reset(initSenateNames);
      this.areaSelectView = new WmsAreaSelectView({
        el: $('#areaSelectContainer')[0]
      });
      this.areaSelectView.render();
    };

    WMSRouter.prototype.routes = {
      "": "default",
      ":year/wms": "wmsNetCountySupplies",
      ":year/wms/region/:regionLetter": "wmsRegion",
      ":year/wms/county/:countyId": "wmsCounty",
      ":year/wms/house/:districtId": "wmsHouseDistrict",
      ":year/wms/senate/:districtId": "wmsSenateDistrict",
      ":year/wms/type/:typeId": "wmsType",
      ":year/wms/entity/:entityId": "wmsEntity",
      ":year/wms/project/:projectId": "wmsProjectDetail"
    };

    WMSRouter.prototype.onTableStartLoad = function() {
      this.areaSelectView.disableSelects();
      this.yearNavView.disableYearButtons();
      this.themeNavToolbarView.disableStrategyTypeList();
      this.mapView.showMapLoading();
      this.currTableView.showLoading();
    };

    WMSRouter.prototype.onTableEndLoad = function() {
      this.areaSelectView.enableSelects();
      this.yearNavView.enableYearButtons();
      this.themeNavToolbarView.enableStrategyTypeList();
      this.mapView.hideMapLoading();
      this.currTableView.hideLoading();
    };

    WMSRouter.prototype.onTableFetchError = function() {
      alert("An error has occured.");
      Backbone.history.navigate("", {
        trigger: true
      });
    };

    WMSRouter.prototype.onTableNothingFound = function() {
      this.onTableEndLoad();
      this.currTableView.showNothingFound();
    };

    WMSRouter.prototype.updateSelectedWug = function(wugId, projectId) {
      if (!(wugId != null)) {
        this.mapView.unselectWugFeatures();
      } else {
        this.mapView.selectWugFeature(wugId, projectId);
      }
    };

    WMSRouter.prototype.updateViewsToNewYear = function(newYear) {
      var currRoute, newRoute, oldYear, y, _i, _len, _ref;
      currRoute = Backbone.history.fragment;
      oldYear = "";
      _ref = namespace.VALID_YEARS;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        y = _ref[_i];
        if (currRoute.indexOf(y + "/") !== -1) {
          oldYear = y;
          break;
        }
      }
      if (oldYear === "") {
        Backbone.history.navigate("");
      }
      newRoute = currRoute.replace(oldYear, newYear);
      Backbone.history.navigate("#/" + newRoute, {
        trigger: true
      });
    };

    WMSRouter.prototype.before = {
      '^[0-9]{4}/wms': function(year) {
        if (this.currTableView != null) {
          this.currTableView = this.currTableView.unrender();
        }
        if (year != null) {
          if (_.contains(namespace.VALID_YEARS, year)) {
            namespace.currYear = year;
          } else {
            alert("Invalid decade specified.");
            Backbone.history.navigate("", {
              trigger: true
            });
            return false;
          }
        }
      }
    };

    WMSRouter.prototype.after = {
      '^[0-9]{4}/wms': function(year) {
        if ((year != null) && (this.currTableView != null)) {
          this.themeNavToolbarView.render();
          this.yearNavView.render();
          this.currTableView.off();
          this.currTableView.on("table:startload", this.onTableStartLoad);
          this.currTableView.on("table:endload", this.onTableEndLoad);
          this.currTableView.on("table:nothingfound", this.onTableNothingFound);
          this.currTableView.on("table:fetcherror", this.onTableFetchError);
          this.currTableView.on("table:hoverwug", this.updateSelectedWug);
          this.currTableView.render();
        }
      }
    };

    WMSRouter.prototype["default"] = function() {
      Backbone.history.navigate("#/" + namespace.currYear + "/wms", {
        trigger: true
      });
    };

    WMSRouter.prototype.wmsNetCountySupplies = function(year) {
      if (this.currTableView != null) {
        this.currTableView = this.currTableView.unrender();
      }
      this.currTableView = new CountyNetSupplyCollectionView({
        el: this.tableContainer
      });
      this.mapView.resetExtent();
      this.mapView.clearWugFeatures();
      this.mapView.hideWmsOverlays();
      this.mapView.showWmsOverlayByViewType("Regions");
      this.areaSelectView.resetSelects();
    };

    WMSRouter.prototype.wmsRegion = function(year, regionLetter) {
      var region;
      region = namespace.regionNames.get(regionLetter);
      if (!(region != null)) {
        alert("Invalid region specified.");
        Backbone.history.navigate("", {
          trigger: true
        });
        return;
      }
      this.currTableView = new RegionStrategyCollectionView({
        el: this.tableContainer,
        id: regionLetter,
        name: regionLetter
      });
      this.mapView.hideWmsOverlays();
      this.mapView.showWmsOverlayByViewType("Regions");
    };

    WMSRouter.prototype.wmsCounty = function(year, countyId) {
      var county, countyName;
      county = namespace.countyNames.get(countyId);
      if (!(county != null)) {
        alert("Invalid countyId specified.");
        Backbone.history.navigate("", {
          trigger: true
        });
        return;
      }
      countyName = county.get('name');
      this.currTableView = new CountyStrategyCollectionView({
        el: this.tableContainer,
        id: countyId,
        name: countyName
      });
      this.mapView.hideWmsOverlays();
      this.mapView.showWmsOverlayByViewType("Counties");
    };

    WMSRouter.prototype.wmsHouseDistrict = function(year, districtId) {
      var district;
      district = namespace.houseNames.get(districtId);
      if (!(district != null)) {
        alert("Invalid districtId specified.");
        Backbone.history.navigate("", {
          trigger: true
        });
        return;
      }
      this.currTableView = new LegeDistrictCollectionView({
        el: this.tableContainer,
        id: districtId,
        type: "house",
        name: district.get("name")
      });
      this.mapView.hideWmsOverlays();
      this.mapView.showWmsOverlayByViewType("HouseDistricts");
    };

    WMSRouter.prototype.wmsSenateDistrict = function(year, districtId) {
      var district;
      district = namespace.senateNames.get(districtId);
      if (!(district != null)) {
        alert("Invalid districtId specified.");
        Backbone.history.navigate("", {
          trigger: true
        });
        return;
      }
      this.currTableView = new LegeDistrictCollectionView({
        el: this.tableContainer,
        id: districtId,
        type: "senate",
        name: district.get("name")
      });
      this.mapView.hideWmsOverlays();
      this.mapView.showWmsOverlayByViewType("SenateDistricts");
    };

    WMSRouter.prototype.wmsType = function(year, typeId) {
      var typeName, wmsType;
      wmsType = namespace.strategyTypes.get(typeId);
      if (!(wmsType != null)) {
        alert("Invalid typeId specified.");
        Backbone.history.navigate("", {
          trigger: true
        });
        return;
      }
      typeName = wmsType.get('name');
      this.currTableView = new StrategyTypeCollectionView({
        el: this.tableContainer,
        id: typeId,
        name: typeName
      });
      this.areaSelectView.resetSelects();
    };

    WMSRouter.prototype.wmsEntity = function(year, entityId) {
      this.currTableView = new EntityStrategyCollectionView({
        el: this.tableContainer,
        id: entityId
      });
      this.areaSelectView.resetSelects();
    };

    WMSRouter.prototype.wmsProjectDetail = function(year, projectId) {
      this.currTableView = new StrategyDetailCollectionView({
        el: this.tableContainer,
        id: projectId
      });
      this.areaSelectView.resetSelects();
    };

    return WMSRouter;

  })(Backbone.Router);
});
