// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['scripts/text!templates/yearNav.html'], function(tpl) {
  var YearNavViewModel;
  return YearNavViewModel = (function(_super) {

    __extends(YearNavViewModel, _super);

    function YearNavViewModel() {
      return YearNavViewModel.__super__.constructor.apply(this, arguments);
    }

    YearNavViewModel.prototype.activeYear = '2040';

    YearNavViewModel.prototype.template = _.template(tpl);

    YearNavViewModel.prototype.render = function() {
      this.$el.empty();
      this.$el.html(this.template());
      ko.applyBindings(this, this.el);
      $("a[data-value='" + this.activeYear + "']", this.$el).parent().addClass('active');
      return this;
    };

    YearNavViewModel.prototype.unrender = function() {
      this.$el.remove();
      return null;
    };

    YearNavViewModel.prototype.initialize = function() {
      this.$el = $(this.el);
      _.bindAll(this, 'render', 'unrender', 'changeYear');
      return null;
    };

    YearNavViewModel.prototype.changeYear = function(data, event) {
      var $target, newYear;
      $target = $(event.target);
      newYear = $target.attr('data-value');
      $target.parent().siblings().removeClass('active');
      $target.parent().addClass('active');
      console.log("Switching to year " + newYear);
      return null;
    };

    return YearNavViewModel;

  })(Backbone.View);
});
