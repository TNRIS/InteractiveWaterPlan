// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['namespace'], function(namespace) {
  var WmsAreaSelectView;
  return WmsAreaSelectView = (function(_super) {

    __extends(WmsAreaSelectView, _super);

    function WmsAreaSelectView() {
      return WmsAreaSelectView.__super__.constructor.apply(this, arguments);
    }

    WmsAreaSelectView.prototype.initialize = function(options) {
      _.bindAll(this, 'render', 'unrender', '_createRegionSelect', '_createCountySelect', '_createHouseSelect', '_createSenateSelect');
      if (!(namespace.countyNames != null) || !(namespace.regionNames != null) || !(namespace.houseNames != null) || !(namespace.senateNames != null)) {
        throw "Must specify namespace.counties, namespace.regions, namespace.house,and namespace.senate";
      }
      this.countyNamesCollection = namespace.countyNames;
      this.regionNamesCollection = namespace.regionNames;
      this.houseNamesCollection = namespace.houseNames;
      this.senateNamesCollection = namespace.senateNames;
    };

    WmsAreaSelectView.prototype.render = function() {
      this._createRegionSelect().chosen();
      this._createCountySelect().chosen();
      this._createHouseSelect().chosen();
      this._createSenateSelect().chosen();
      return this;
    };

    WmsAreaSelectView.prototype._createRegionSelect = function() {
      var opt, region, _i, _len, _ref;
      this.$regionSelect = $("<select></select>");
      this.$regionSelect.append($("<option value='-1'>Select a Region</option>"));
      _ref = this.regionNamesCollection.models;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        region = _ref[_i];
        opt = $("<option value='" + (region.get("letter")) + "'>Region " + (region.get("letter")) + "</option>");
        this.$regionSelect.append(opt);
      }
      this.$("#regionSelectContainer").append(this.$regionSelect);
      this.$regionSelect.on("change", function() {
        var $this;
        $this = $(this);
        if ($this.val() === "-1") {
          return;
        }
        Backbone.history.navigate("#/" + namespace.currYear + "/wms/region/" + ($this.val()), {
          trigger: true
        });
      });
      return this.$regionSelect;
    };

    WmsAreaSelectView.prototype._createCountySelect = function() {
      var county, opt, _i, _len, _ref;
      this.$countySelect = $("<select></select>");
      this.$countySelect.append($("<option value='-1'>Select a County</option>"));
      _ref = this.countyNamesCollection.models;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        county = _ref[_i];
        opt = $("<option value='" + (county.get("id")) + "'>" + (county.get("name")) + "</option>");
        this.$countySelect.append(opt);
      }
      this.$("#countySelectContainer").append(this.$countySelect);
      this.$countySelect.on("change", function() {
        var $this;
        $this = $(this);
        if ($this.val() === "-1") {
          return;
        }
        Backbone.history.navigate("#/" + namespace.currYear + "/wms/county/" + ($this.val()), {
          trigger: true
        });
      });
      return this.$countySelect;
    };

    WmsAreaSelectView.prototype._createHouseSelect = function() {
      var district, opt, _i, _len, _ref;
      this.$houseSelect = $("<select></select>");
      this.$houseSelect.append($("<option value='-1'>Select a State House District</option>"));
      _ref = this.houseNamesCollection.models;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        district = _ref[_i];
        opt = $("<option value='" + (district.get("id")) + "'>" + (district.get("name")) + "</option>");
        this.$houseSelect.append(opt);
      }
      this.$("#houseSelectContainer").append(this.$houseSelect);
      this.$houseSelect.on("change", function() {
        var $this;
        $this = $(this);
        if ($this.val() === "-1") {
          return;
        }
        Backbone.history.navigate("#/" + namespace.currYear + "/wms/house/" + ($this.val()), {
          trigger: true
        });
      });
      return this.$houseSelect;
    };

    WmsAreaSelectView.prototype._createSenateSelect = function() {
      var district, opt, _i, _len, _ref;
      this.$senateSelect = $("<select></select>");
      this.$senateSelect.append($("<option value='-1'>Select a State Senate District</option>"));
      _ref = this.senateNamesCollection.models;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        district = _ref[_i];
        opt = $("<option value='" + (district.get("id")) + "'>" + (district.get("name")) + "</option>");
        this.$senateSelect.append(opt);
      }
      this.$("#senateSelectContainer").append(this.$senateSelect);
      this.$senateSelect.on("change", function() {
        var $this;
        $this = $(this);
        if ($this.val() === "-1") {
          return;
        }
        Backbone.history.navigate("#/" + namespace.currYear + "/wms/senate/" + ($this.val()), {
          trigger: true
        });
      });
      return this.$senateSelect;
    };

    WmsAreaSelectView.prototype.unrender = function() {
      this.$el.remove();
      return null;
    };

    return WmsAreaSelectView;

  })(Backbone.View);
});
