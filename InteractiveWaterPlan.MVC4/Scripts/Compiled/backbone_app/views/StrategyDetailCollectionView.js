// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['namespace', 'views/BaseTableCollectionView', 'views/StrategyDetailView', 'scripts/text!templates/strategyDetailTable.html'], function(namespace, BaseTableCollectionView, StrategyDetailView, tpl) {
  var StrategyDetailCollectionView;
  return StrategyDetailCollectionView = (function(_super) {

    __extends(StrategyDetailCollectionView, _super);

    function StrategyDetailCollectionView() {
      return StrategyDetailCollectionView.__super__.constructor.apply(this, arguments);
    }

    StrategyDetailCollectionView.prototype.initialize = function(options) {
      var StrategyDetailCollection, fetchParams;
      this.projectId = options.id;
      this.projectName = options.name;
      this.viewName = ko.observable("" + this.projectName);
      fetchParams = {
        projectId: this.projectId
      };
      StrategyDetailCollection = Backbone.Collection.extend({
        url: "" + BASE_API_PATH + "api/strategies/type"
      });
      StrategyDetailCollectionView.__super__.initialize.call(this, StrategyDetailView, StrategyDetailCollection, tpl, {
        fetchParams: fetchParams
      });
      return null;
    };

    return StrategyDetailCollectionView;

  })(BaseTableCollectionView);
});
