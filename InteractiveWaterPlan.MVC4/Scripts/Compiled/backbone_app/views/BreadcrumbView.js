// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['scripts/text!templates/breadcrumbList.html'], function(tpl) {
  var BreadcrumbView;
  return BreadcrumbView = (function(_super) {

    __extends(BreadcrumbView, _super);

    function BreadcrumbView() {
      return BreadcrumbView.__super__.constructor.apply(this, arguments);
    }

    BreadcrumbView.prototype.template = _.template(tpl);

    BreadcrumbView.prototype.initialize = function() {
      _.bindAll(this, 'render', 'unrender', 'selectNetCounty');
      this.selectedStrategyView = ko.observable();
      return null;
    };

    BreadcrumbView.prototype.render = function() {
      this.$el.empty();
      this.$el.html(this.template());
      ko.applyBindings(this, this.el);
      return this;
    };

    BreadcrumbView.prototype.unrender = function() {
      this.$el.remove();
      return null;
    };

    BreadcrumbView.prototype.selectNetCounty = function() {
      this.selectedStrategyView.notifySubscribers('net-supplies');
    };

    return BreadcrumbView;

  })(Backbone.View);
});
