// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['scripts/text!templates/themeNav.html'], function(tpl) {
  var ThemeNavView;
  return ThemeNavView = (function(_super) {

    __extends(ThemeNavView, _super);

    function ThemeNavView() {
      return ThemeNavView.__super__.constructor.apply(this, arguments);
    }

    ThemeNavView.prototype.template = _.template(tpl);

    ThemeNavView.prototype.render = function() {
      this.$el.empty();
      this.$el.html(this.template());
      ko.applyBindings(this, this.el);
      return this;
    };

    ThemeNavView.prototype.unrender = function() {
      kb.release(this);
      this.$el.remove();
      return null;
    };

    ThemeNavView.prototype.initialize = function() {
      _.bindAll(this, 'render', 'unrender', 'changeStrategyView');
      return null;
    };

    ThemeNavView.prototype.changeStrategyView = function(data, event) {
      var $target, newStrategyName;
      $target = $(event.target);
      newStrategyName = $target.attr('data-value');
      $target.parents('li.dropdown').addClass('active');
      $target.parents('li.dropdown').children('a.dropdown-toggle').children('span').html($target.html());
      return null;
    };

    return ThemeNavView;

  })(Backbone.View);
});
