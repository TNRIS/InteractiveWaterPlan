// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/BaseTableCollectionView', 'views/StrategyView', 'scripts/text!templates/strategyTable.html'], function(BaseTableCollectionView, StrategyView, tpl) {
  var CountyStrategyCollectionView;
  return CountyStrategyCollectionView = (function(_super) {

    __extends(CountyStrategyCollectionView, _super);

    function CountyStrategyCollectionView() {
      return CountyStrategyCollectionView.__super__.constructor.apply(this, arguments);
    }

    CountyStrategyCollectionView.prototype.initialize = function(options) {
      var StrategyCollection, fetchParams;
      _.bindAll(this, 'selectType', 'fetchCallback');
      this.countyId = options.id;
      this.countyName = options.name;
      this.viewName = "" + this.countyName + " County";
      fetchParams = {
        countyId: this.countyId
      };
      StrategyCollection = Backbone.Collection.extend({
        url: "" + BASE_API_PATH + "api/strategies/county"
      });
      CountyStrategyCollectionView.__super__.initialize.call(this, options.currYear, StrategyView, StrategyCollection, tpl, {
        fetchParams: fetchParams
      });
      this.selectedType = ko.observable();
      this.wugArray = ko.observableArray();
      return null;
    };

    CountyStrategyCollectionView.prototype.fetchCallback = function(models) {
      var m, newWugList, _i, _len;
      newWugList = _.map(models, function(m) {
        return {
          id: m.get("recipientEntityId"),
          name: m.get("recipientEntityName"),
          wktGeog: m.get("recipientEntityWktGeog")
        };
      });
      for (_i = 0, _len = newWugList.length; _i < _len; _i++) {
        m = newWugList[_i];
        this.wugArray.push(m);
      }
    };

    CountyStrategyCollectionView.prototype.render = function() {
      CountyStrategyCollectionView.__super__.render.apply(this, arguments);
      this.$('#strategyPlaceName').html(this.viewName);
      return this;
    };

    CountyStrategyCollectionView.prototype.selectType = function(data, event) {
      var $target, typeId, typeName;
      $target = $(event.target);
      typeId = $target.data('value');
      typeName = $target.data('name');
      this.selectedType({
        id: typeId,
        name: typeName
      });
    };

    return CountyStrategyCollectionView;

  })(BaseTableCollectionView);
});
