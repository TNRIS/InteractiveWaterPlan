---
- hosts: all
  sudo: yes
  vars_files:
    - variables.yml
  handlers:
    - include: handlers.yml

  tasks:
  - name: add public key to vagrant's authorized_keys file
    authorized_key: user=vagrant key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    when: vagrant
    sudo: no

  - name: add vagrant sudoers file
    copy: src=templates/vagrant_sudoers dest=/etc/sudoers.d/vagrant validate='visudo -cf %s' group=root owner=root mode=440
    when: vagrant

  - name: install python software properties package (for installing PPAs)
    apt: pkg=python-software-properties

  - name: add nodejs ppa
    apt_repository: repo=ppa:chris-lea/node.js

  - name: install node js
    apt: pkg=nodejs

  - name: install monit
    apt: pkg=monit

  - name: install upstart
    apt: pkg=monit

  - name: install ruby
    apt: pkg=ruby

  - name: install gem
    apt: pkg=rubygems

  - name: install sass
    gem: name=sass state=present user_install=no

  - name: set up upstart config for water plan app
    template: src=templates/water-plan-app-upstart-conf.j2 dest=/etc/init/{{ upstart_cmd }}.conf owner=root group=root mode=0644
    notify:
    - restart {{ upstart_cmd }}

  - include: varnish_tasks.yml

  - name: set up monit config for water plan app
    template: src=templates/water-plan-app-monit-conf.j2 dest=/etc/monit/conf.d/{{ upstart_cmd }}.conf owner=root group=root mode=0644
    notify:
    - restart monit

  - name: create {{ water_plan_user }} account
    user: name={{ water_plan_user }}

  - name: create app dir
    file: path={{ app_dir }} state=directory recurse=yes owner={{ water_plan_user }} group={{ water_plan_user }}

  - name: build app dist
    local_action: command chdir=../application gulp dist --type production
    sudo: no

  - name: send dist build to tmp server directory
    synchronize: src=../application/dist/ dest={{ tmp_dist }} archive=no recursive=yes delete=yes rsync_path="sudo -u {{ water_plan_user }} rsync"

  - name: install npm packages
    npm: path={{ tmp_dist }}
    sudo_user: "{{ water_plan_user }}"

  - name: move tmp server directory into production
    command: cp -RT {{ tmp_dist }}/ {{ app_dir }}/
    sudo_user: "{{ water_plan_user }}"
    notify:
    - restart {{ upstart_cmd }}
    - restart varnish
